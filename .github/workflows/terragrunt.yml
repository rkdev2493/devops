name: Terragrunt Plan & Apply

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to use'
        required: true
        default: 'main'
      environment:
        description: 'Environment (dev or prod)'
        required: true
        default: 'dev'
      action:
        description: 'Action to perform (plan or apply)'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply

jobs:
  terragrunt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Install Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v0.56.3/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version

      - name: Initialize Terragrunt
        run: |
          cd live/${{ github.event.inputs.environment }}
          terragrunt init

      - name: Auto-import existing AWS resources if missing from state
        run: |
          cd live/${{ github.event.inputs.environment }}

          # IAM Role
          if ! terragrunt state list | grep -q "aws_iam_role.ec2_cloudwatch_ssm"; then
            echo "Importing IAM Role ec2_cloudwatch_ssm..."
            terragrunt import aws_iam_role.ec2_cloudwatch_ssm ec2-cloudwatch-ssm-role-default
          fi

          # IAM Instance Profile
          if ! terragrunt state list | grep -q "aws_iam_instance_profile.ec2_profile"; then
            echo "Importing IAM Instance Profile..."
            terragrunt import aws_iam_instance_profile.ec2_profile ec2-cloudwatch-ssm-profile
          fi

          # Security Group
          if ! terragrunt state list | grep -q "aws_security_group.ec2_sg"; then
            echo "Importing Security Group ec2_sg..."
            terragrunt import aws_security_group.ec2_sg sg-0ff24488acc056a68
          fi

      - name: Terragrunt Plan/Apply
        run: |
          set -e
          cd live/${{ github.event.inputs.environment }}
          if [ "${{ github.event.inputs.action }}" = "plan" ]; then
            terragrunt plan --terragrunt-non-interactive
          else
            terragrunt apply -auto-approve --terragrunt-non-interactive
          fi
